package WindowPractice;

import Utils.BrowserUtils;
import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import java.util.Set;
import java.util.concurrent.TimeUnit;

public class WindowsIntro {
    WebDriver driver;

    @BeforeClass
    public void setUp() {
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();// it will open the driver
        driver.manage().window().fullscreen(); //maximize or fullscreen

    }

    @Test
    public void test1() {

        driver.navigate().to("https://the-internet.herokuapp.com/windows");
        driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS); // waits for 5 seconds

        WebElement clickHereButton = driver.findElement(By.xpath("//a[.='Click Here']"));
        clickHereButton.click();
        System.out.println(driver.getTitle());
        System.out.println(driver.getCurrentUrl());
        String parentPageId = driver.getWindowHandle();
        System.out.println(parentPageId);
        //this method will return String for page id
        Set<String> pageIds = driver.getWindowHandles();//set of Strings of pade Ids
        // switchTo() no parameter
        // and window(PAgeId)
        for (String id : pageIds) {
            if (!id.equals(parentPageId)) {
                driver.switchTo().window(id);
            }

        }
        System.out.println("After switching title: " + driver.getTitle());
        System.out.println("After switching url: " + driver.getCurrentUrl());
        // if you do not switch to new window, you can nnot use the new window
        // Once you switch to the new window, you can nor use the parent window,unless you switch back to parent
        driver.switchTo().window(parentPageId);
        clickHereButton.click();
    }
    @Test
    public void test2(){
        driver.get("http://www.popuptest.com/popuptest12.html");
        String currentPageId=driver.getWindowHandle(); // this is main page
        Set<String> ids=driver.getWindowHandles(); // these are new windows
        System.out.println(ids);
        // TASK:
        // close all the Popup if they are not equals to your currentPage
        for (String closePopup :ids ){
            if (!closePopup.equals(currentPageId)){
                // it will switch the driiver to new window if id is not equals to parent id
                driver.switchTo().window(closePopup);
                driver.close(); // it will close your current window
            }
        }
        driver.switchTo().window(currentPageId); // It will switch back to your first window
        System.out.println(driver.getCurrentUrl());
        System.out.println(driver.getTitle());
    }
    @Test
    public void test3(){
        driver.get("http://www.popuptest.com/popuptest1.html");
        String parentId=driver.getWindowHandle();
        // Close all the windows if they are not equlas to your first page
        BrowserUtils.closeWindows(driver,parentId);
    }
